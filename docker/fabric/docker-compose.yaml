version: '2'

networks:
  monetasa-bc-net:
    driver: bridge

services:
  #The orderer name is taken from the name generated by the "cryptogen" certs – it indicates the orderer orgs one and only orderer
  orderer.monetasa.com:
    extends:
      file:   base/docker-compose-base.yaml
      #Refers to orderer name
      service: orderer.monetasa.com
    #The container name is a copy of the orderer name
    container_name: orderer.monetasa.com
    networks:
      - monetasa-bc-net

  #The peer name is taken from the name generated by the "cryptogen" certs – it indicates the peer org 1 and one peer "peer0"
  peer0.org1.monetasa.com:
    # Container name – same as the peer name
    container_name: peer0.org1.monetasa.com
    extends:
      file:  base/docker-compose-base.yaml
      # Refers to peer name
      service: peer0.org1.monetasa.com
    networks:
      # Our network is called "monetasa-net"
      - monetasa-bc-net

  # Fabric-ca for org1
  ca.org1.monetasa.com:
    container_name: ca.org1.monetasa.com
    extends:
      file: base/docker-compose-base.yaml
      # Refers to ca name
      service: ca.org1.monetasa.com
    # The container name is a copy of the orderer name
    depends_on:
      - fabric-ca-pgsql
    restart: on-failure
    networks:
      - monetasa-bc-net

  fabric-ca-pgsql:
    # Container name – same as the pgsql container name
    container_name: fabric-ca-pgsql
    extends:
      file:  base/docker-compose-base.yaml
      # Refers to pgsql name
      service: fabric-ca-pgsql
    networks:
      - monetasa-bc-net
    # Persistent data
    volumes:
      - ./fabric-ca-db:/var/lib/postgresql

  # Fabric tools
  cli:
    container_name: cli
    image: hyperledger/fabric-tools:x86_64-1.1.0
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      # peer0 from Org1 is the default for this CLI container
      - CORE_PEER_ADDRESS=peer0.org1.monetasa.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=true
      # Reflect peer0 name, org1 name and our company's domain
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.monetasa.com/peers/peer0.org1.monetasa.com/tls/server.crt
      # Reflect peer0 name, org1 name and our company's domain
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.monetasa.com/peers/peer0.org1.monetasa.com/tls/server.key
      # Reflect peer0 name, org1 name and our company's domain
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.monetasa.com/peers/peer0.org1.monetasa.com/tls/ca.crt
      # Reflect peer0 name, org1 name and our company's domain
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.monetasa.com/users/Admin@org1.monetasa.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    # On start we are provisioning the network
    command: /bin/bash -c 'scripts/init.sh'
    volumes:
        - /var/run/:/host/var/run/
        - ../../chaincode/:/opt/gopath/src/github.com/chaincode
        - ../../config/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
        - ./artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/artifacts
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
    depends_on:
      - orderer.monetasa.com
      - peer0.org1.monetasa.com
    networks:
      - monetasa-bc-net
