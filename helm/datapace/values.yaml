replicaCount: 1

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name:

podSecurityContext: {}

securityContext: {}

resources: {}

imageCredentials:
  registry: registry.gitlab.com/drasko/datapace-docker

defaults:
  logLevel: "info"
  enableNKSLogging: true
  image:
    pullPolicy: "IfNotPresent"
    repository: "registry.gitlab.com/drasko/datapace-docker"
    tag: "latest"

dproxy:
  suffix: dproxy
  encKey: W0JD00gEAGUDV6UI0+16iVRx8p+PQx79ahGlBwhWz/g=
  image:
    name: dproxy
  service:
    type: ClusterIP
    port:
      http: 80
  ingress:
    enabled: true
    annotations: {kubernetes.io/ingress.class: nginx}
    hosts:
      - host: dproxy.datapace.local
        paths: ["/"]
    tls:
      - hosts:
        - dproxy.datapace.local
        secretName: dproxy.datapace.local

auth:
  operations:
    enabled: true
  suffix: auth
  image:
    name: auth
  admin:
    email: admin@datapace.com
    password: datapace
  service:
    type: ClusterIP
    port:
      http: 8080
      grpc: 8081

transactions:
  operations: 
    enabled: true
  suffix: transactions
  image:
    name: transactions
    tag: latest
  service:
    type: ClusterIP
    port:
      http: 8082
      grpc: 8083

accesscontrol:
  operations:
    enabled: true
  suffix: accesscontrol
  image:
    name: access-control
  service:
    type: ClusterIP
    port:
      http: 8090
      grpc: 8091

terms:
  suffix: terms
  image:
    name: terms
  service:
    type: ClusterIP
    port:
      http: 8092
      grpc: 8093

streams:
  suffix: streams
  image:
    name: streams
  service:
    type: ClusterIP
    port:
      http: 8084
      grpc: 8085

executions:
  suffix: executions
  image:
    name: executions
  service:
    type: ClusterIP
    port:
      http: 8088
      grpc: 8089

subscriptions:
  operations:
    enabled: true
  suffix: subscriptions
  image:
    name: subscriptions
  service:
    type: ClusterIP
    port:
      http: 8086

ui:
  suffix: ui
  image:
    name: ui
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    annotations: {kubernetes.io/ingress.class: nginx}
    host: ui.datapace.local
    tls:
      - hosts:
        - ui.datapace.local
        secretName: ui.datapace.local

postgresql:
  postgresqlPassword: dproxy
  nameOverride: datapace-postgresql

mongodb:
  nameOverride: datapace-mongodb
  architecture: replicaset
  replicaCount: 3
  persistence:
    enabled: true
  usePassword: false
  metrics:
    enabled: true
    containerPort: 9216
    service:
      port: 9216
    serviceMonitor:
      enabled: false

bc:
  ip: 10.0.0.1
  hostname: peer0.org1.datapace.com
  hostnames:
    - peer0.org1.datapace.com
    - orderer.datapace.com
    - ca.org1.datapace.com

# Optional services

groups:
  suffix: groups
  service:
    port:
      grpc: 8095

sharing:
  suffix: sharing
  service:
    port:
      grpc: 8097