apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "datapace.fullname" . }}-{{ .Values.terms.suffix }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "datapace.fullname" . }}
      component: {{ .Values.terms.suffix }}
  template:
    metadata:
      labels:
        app: {{ include "datapace.fullname" . }}
        component: {{ .Values.terms.suffix }}
        {{- if .Values.defaults.enableNKSLogging }}
        nks-elk: enabled
        {{- end }}
    spec:
      imagePullSecrets:
        - name: registrykey
      serviceAccountName: {{ include "datapace.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: keystore
                operator: In
                values:
                - "true"
      containers:
        - env:
            - name: DATAPACE_TERMS_HTTP_PORT
              value: "{{ .Values.terms.service.port.http }}"
            - name: DATAPACE_TERMS_GRPC_PORT
              value: "{{ .Values.terms.service.port.grpc }}"
            - name: DATAPACE_TERMS_DB_URL
              value: "{{- printf "%s-%s" .Release.Name "datapace-mongodb"}}"
            - name: DATAPACE_TERMS_FABRIC_ADMIN
              value: "Admin@org1.datapace.com"
            - name: DATAPACE_AUTH_URL
              value: "{{ include "datapace.fullname" . }}-{{ .Values.auth.suffix }}:{{ .Values.auth.service.port.grpc }}"
            - name: DATAPACE_CONFIG
              value: "/tmp/config"
          name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ default .Values.defaults.image.repository .Values.terms.image.repository }}/{{ .Values.terms.image.name }}:{{ default .Values.defaults.image.tag .Values.terms.image.tag }}"
          imagePullPolicy: {{default .Values.defaults.image.pullPolicy .Values.terms.image.pullPolicy}}
          ports:
            - name: http
              containerPort: {{ .Values.terms.service.port.http }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /version
              port: {{ .Values.terms.service.port.http }}
          readinessProbe:
            httpGet:
              path: /version
              port: {{ .Values.terms.service.port.http }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: kvs
              mountPath: "/tmp/datapace-service-kvs"
            - name: msp
              mountPath: "/tmp/datapace-service-msp"
            - name: hlf-config
              mountPath: "/tmp/config/fabric"
            {{- range $i, $org := $.Values.PeerOrgs }}
            - name: peer-{{ $org.Name | lower }}-tlsca
              mountPath: "/tmp/config/crypto-config/peerOrganizations/{{ $org.Domain }}/tlsca"
            - name: peer-{{ $org.Name | lower }}-admin-msp
              mountPath: "/tmp/config/crypto-config/peerOrganizations/{{ $org.Domain }}/users/Admin@{{ $org.Domain }}/msp"
            {{- end }}
            {{- range $i, $org := $.Values.OrdererOrgs }}
            {{- range $i, $host := $org.Specs }}
            - name: orderer-{{ $org.Name | lower }}-{{ $host.Hostname | lower }}-tlsca
              mountPath: "/tmp/config/crypto-config/ordererOrganizations/{{ $org.Domain }}/tlsca"
            {{- end }}
            {{- end }}
      volumes:
        {{- range $i, $org := $.Values.PeerOrgs }}
      - name: peer-{{ $org.Name | lower }}-tlsca
        secret:
          secretName: hlf-ca--{{ $org.Name | lower }}-tlsca
      - name: peer-{{ $org.Name | lower }}-admin-msp
        secret:
          secretName: hlf-peer--{{ $org.Name | lower }}--admin-msp
          items:
          - key: cert.pem
            path: signcerts/Admin@{{ $org.Domain}}-cert.pem
          - key: key.pem
            path: keystore/priv_sk
          - key: cacert.pem
            path: cacerts/ca.{{ $org.Domain }}-cert.pem
          - key: tlscacert.pem
            path: tlscacerts/tlsca.{{ $org.Domain }}-cert.pem
          - key: admincert.pem
            path: admincerts/Admin@{{ $org.Domain }}-cert.pem
      {{- end }}
      {{- range $i, $org := $.Values.OrdererOrgs }}
      {{- range $i, $host := $org.Specs }}
      - name: orderer-{{ $org.Name | lower }}-{{ $host.Hostname | lower }}-tlsca
        secret:
          secretName: hlf-orderer--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}-tlsca
      {{- end }}
      {{- end }}
      - name: hlf-config
        configMap:
          name: hlf-config
      - name: kvs
        persistentVolumeClaim:
          claimName: kvs
      - name: msp
        persistentVolumeClaim:
          claimName: msp

      {{- if $.Values.hostAliases }}
      hostAliases:
      {{- range $i, $alias := $.Values.hostAliases }}
      - ip: {{ $alias.ip }}
        hostnames: {{ $alias.hostnames }}
      {{- end }}
      {{- end }}{{""}}
