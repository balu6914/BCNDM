swagger: "2.0"
info:
  title: Monetasa streams service
  description: HTTP API for managing data streams.
  version: "1.0.0"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /streams:
    post:
      summary: Adds new stream
      description: |
        Adds a new stream to the list of streams owned by user identified using
        the provided access token.
      tags:
        - streams
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: stream
          description: JSON-formatted document describing the new stream.
          in: body
          schema:
            $ref: "#/definitions/StreamReq"
          required: true
      responses:
        201:
          description: Stream created.
          schema:
            $ref: '#/definitions/StreamRes'
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        409:
          description: Stream already exists.
        500:
          $ref: "#/responses/ServiceError"
    get:
      summary: Retrieves streams by query parameters
      tags:
        - streams
      parameters:
        - $ref: "#/parameters/Authorization"
        - in: query
          name: x0
          type: number
          description: X value of the first search point. X values represent longitude here.
        - in: query
          name: x1
          type: number
          required: false
          description: X value of the second search point. X values represent longitude here.
        - in: query
          name: x2
          type: number
          required: false
          description: X value of the third search point. X values represent longitude here.
        - in: query
          name: x3
          type: number
          required: false
          description: X value of the fourth search point. X values represent longitude here.
        - in: query
          name: y0
          type: number
          required: false
          description: Y value of the first search point. Y values represent latitude here.
        - in: query
          name: y1
          type: number
          required: false
          description: Y value of the second search point. Y values represent latitude here.
        - in: query
          name: y2
          type: number
          required: false
          description: Y value of the third search point. Y values represent latitude here.
        - in: query
          name: y3
          type: number
          required: false
          description: Y value of the fourth search point. Y values represent latitude here.
        - in: query
          name: owner
          type: string
          required: false
          description: |
            ID of the owner of the stream. You can search by the owner using logical NOT to match streams
            with the owner other than the provided one. You can achieve this by adding "-" perfix to the value.
        - in: query
          name: name
          type: string
          required: false
          description: |
            Name of the stream to be found. Name search is case sensitive and uses partial matching.
            You can search by name using logical NOT to match all streams with the name other than the provided one.
            You can achieve this by adding "-" character at the beginning of the value. If the name starts with the
            "-" character, add one more "-" to the prefix to prevent "-" at the beginning being interpreted as logical NOT.
        - in: query
          name: type
          type: string
          required: false
          description: |
            Type of the stream to be found. Type search is case sensitive and uses partial matching.
            You can search by type using logical NOT to match all streams with the type other than the provided one.
            You can achieve this by adding "-" character at the beginning of the value. If the type starts with the
            "-" character, add one more "-" to the prefix to prevent "-" at the beginning being interpreted as logical NOT.
        - in: query
          name: minPrice
          type: number
          minimum: 0
          required: false
          description: Lower bound of price range search. Entries with value equal to this will be included in result set.
        - in: query
          name: maxPrice
          type: number
          minimum: 0
          required: false
          description: Lower bound of price range search. Entries with value equal to this will not be included in result set.
        - in: query
          name: page
          type: number
          minimum: 0
          default: 0
          required: false
          description: Start page from which items will be included in the result set.
        - in: query
          name: limit
          type: number
          maximum: 100
          default: 20
          required: false
          description: Number of items that will be taken starting from page parameter. The final result set is in range [page * limit, page * limit + limit).
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: '#/definitions/Page'
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /streams/bulk:
    post:
      summary: Adds a bulk of a new streams
      description: |
        Adds a new streams to the list of streams owned by user identified using
        the provided access token.
      tags:
        - streams
      consumes:
        - multipart/form-data
      parameters:
        - $ref: "#/parameters/Authorization"
        - in: formData
          name: csv
          type: file
          description: The csv file that contains a list of streams to be uploaded.
      responses:
        201:
          description: Stream created.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        409:
          description: |
            Some of the Streams already exist in the database. This status is most
            likely a result of Stream URL uniquness violation. All valid streams are
            successfully added.
          schema:
            $ref: "#/definitions/BulkConflictErr"
        500:
          $ref: "#/responses/ServiceError"
  /streams/{streamId}:
    get:
      summary: Retrieves stream info
      tags:
        - streams
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/StreamId"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: '#/definitions/StreamRes'
        403:
          description: Missing or invalid access token provided.
        404:
          description: Stream does not exist.
        500:
          $ref: "#/responses/ServiceError"
    put:
      summary: Updates stream info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload. Note that the stream's ID
        cannot be changed.
      tags:
        - streams
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/StreamId"
        - name: stream
          description: JSON-formatted document describing the updated stream.
          in: body
          schema:
            $ref: '#/definitions/StreamReq'
          required: true
      responses:
        200:
          description: Stream updated.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Stream does not exist.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    delete:
      summary: Removes a stream
      description: |
        Removes a stream.
        tags:
        - stream
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/StreamId"
      responses:
        204:
          description: Stream removed.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"

parameters:
  Authorization:
    name: Authorization
    description: User's access token.
    in: header
    type: string
    required: true
  StreamId:
    name: streamId
    description: Unique stream identifier.
    in: path
    type: string
    minimum: 1
    required: true

responses:
  ServiceError:
    description: Unexpected server-side error occured.

definitions:
  Location:
    type: object
    properties:
      type:
        type: string
        description: Type of the location data.
      coordinates:
        type: array
        minItems: 0
        maxItems: 2
        items:
          type: number

  Stream:
    type: object
    description: Represents a base type of Stream request and response.
    properties:
      owner:
        type: string
        description: Id of the user who created the stream.
      id:
        type: string
        description: Unique stream identifier generated by the service.
      name:
        type: string
        description: Name of the stream.
      type:
        type: string
        description: Type of the stream.
      description:
        type: string
        description: Description of the stream.
      url:
        type: string
        description: URL of the stream.
      price:
        type: integer
        description: Price of the stream in miTAS.
      location:
        $ref: '#/definitions/Location'
      external:
        type: boolean
        description: Indicates whether stream data is from external service or not.
      bq:
        $ref: '#/definitions/BigQuery'

  BigQuery:
    type: object
    description: Represents a data related to the Big Query.
    properties:
      project:
        type: string
        description: Big Query project.
      dataset:
        type: string
        description: Big Query dataset.
      table:
        type: string
        description: Big Query table.
      fields:
        type: string
        description: Query fields separated by comma.

  StreamReq:
    allOf:
      - $ref: '#/definitions/Stream'
    description: Represent request for creating or updating a Stream.
    required:
      - type
      - name
      - description
      - url

  StreamRes:
    allOf:
      - $ref: '#/definitions/Stream'
    description: Represent response for single Stream create or update request.
    required:
      - owner
      - id
      - name
      - type
      - description
      - price

  Page:
    type: object
    description: Represent paged response.
    properties:
      page:
        type: number
        minimum: 0
        default: 0
        description: Number of page returned by service.
      limit:
        type: number
        default: 20
        description: Preferred size of the page content. Size of returned set might be less than limit, but must not be more then limit.
      total:
        type: number
        minimum: 0
        description: Total number of elements satisfying query.
      content:
        type: array
        items:
          $ref: '#/definitions/StreamRes'

  BulkConflictErr:
    type: object
    description: Stream conflict error.
    properties:
      message:
        type: string
        description: Error message.
      conflicts:
        description: List of conflicted values.
        type: array
        items:
          type: string
