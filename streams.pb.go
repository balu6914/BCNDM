// Code generated by protoc-gen-go. DO NOT EDIT.
// source: streams.proto

package monetasa

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Stream struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Owner                string   `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Price                uint64   `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	External             bool     `protobuf:"varint,6,opt,name=external" json:"external,omitempty"`
	Project              string   `protobuf:"bytes,7,opt,name=project" json:"project,omitempty"`
	Dataset              string   `protobuf:"bytes,8,opt,name=dataset" json:"dataset,omitempty"`
	Table                string   `protobuf:"bytes,9,opt,name=table" json:"table,omitempty"`
	Fields               string   `protobuf:"bytes,10,opt,name=fields" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_streams_0aeed44419c8edc6, []int{0}
}
func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (dst *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(dst, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Stream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Stream) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Stream) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Stream) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Stream) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

func (m *Stream) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Stream) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *Stream) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *Stream) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func init() {
	proto.RegisterType((*Stream)(nil), "monetasa.Stream")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StreamsServiceClient is the client API for StreamsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamsServiceClient interface {
	One(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Stream, error)
}

type streamsServiceClient struct {
	cc *grpc.ClientConn
}

func NewStreamsServiceClient(cc *grpc.ClientConn) StreamsServiceClient {
	return &streamsServiceClient{cc}
}

func (c *streamsServiceClient) One(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Stream, error) {
	out := new(Stream)
	err := c.cc.Invoke(ctx, "/monetasa.StreamsService/One", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StreamsServiceServer is the server API for StreamsService service.
type StreamsServiceServer interface {
	One(context.Context, *ID) (*Stream, error)
}

func RegisterStreamsServiceServer(s *grpc.Server, srv StreamsServiceServer) {
	s.RegisterService(&_StreamsService_serviceDesc, srv)
}

func _StreamsService_One_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamsServiceServer).One(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monetasa.StreamsService/One",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamsServiceServer).One(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _StreamsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monetasa.StreamsService",
	HandlerType: (*StreamsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "One",
			Handler:    _StreamsService_One_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "streams.proto",
}

func init() { proto.RegisterFile("streams.proto", fileDescriptor_streams_0aeed44419c8edc6) }

var fileDescriptor_streams_0aeed44419c8edc6 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x71, 0x92, 0xa6, 0xe9, 0xa9, 0x54, 0xd5, 0x09, 0xa1, 0x53, 0xa6, 0xa8, 0x0b, 0x99,
	0x32, 0xc0, 0xc4, 0xce, 0xc2, 0x84, 0x94, 0x3e, 0x81, 0x9b, 0x1c, 0x52, 0x50, 0x6c, 0x47, 0xb6,
	0xf9, 0xf3, 0xc8, 0x3c, 0x06, 0xb2, 0xdd, 0xd2, 0xed, 0xbe, 0xef, 0x7e, 0xb2, 0xef, 0x0e, 0x6e,
	0x9d, 0xb7, 0x2c, 0x95, 0xeb, 0x16, 0x6b, 0xbc, 0xc1, 0x4a, 0x19, 0xcd, 0x5e, 0x3a, 0x59, 0x6f,
	0x07, 0xa3, 0x94, 0xd1, 0xc9, 0x1f, 0x7e, 0x05, 0x94, 0xc7, 0x98, 0xc4, 0x1d, 0x64, 0xd3, 0x48,
	0xa2, 0x11, 0xed, 0xa6, 0xcf, 0xa6, 0x11, 0x11, 0x0a, 0x2d, 0x15, 0x53, 0x16, 0x4d, 0xac, 0xf1,
	0x0e, 0x56, 0xe6, 0x5b, 0xb3, 0xa5, 0x3c, 0xca, 0x04, 0xb8, 0x87, 0xfc, 0xd3, 0xce, 0x54, 0x44,
	0x17, 0xca, 0x90, 0x5b, 0xec, 0x34, 0x30, 0xad, 0x1a, 0xd1, 0x16, 0x7d, 0x02, 0xac, 0xa1, 0xe2,
	0x1f, 0xcf, 0x56, 0xcb, 0x99, 0xca, 0x46, 0xb4, 0x55, 0xff, 0xcf, 0x48, 0xb0, 0x5e, 0xac, 0xf9,
	0xe0, 0xc1, 0xd3, 0x3a, 0xbe, 0x73, 0xc1, 0xd0, 0x19, 0xa5, 0x97, 0x8e, 0x3d, 0x55, 0xa9, 0x73,
	0xc6, 0xf0, 0x8b, 0x97, 0xa7, 0x99, 0x69, 0x93, 0xa6, 0x89, 0x80, 0xf7, 0x50, 0xbe, 0x4f, 0x3c,
	0x8f, 0x8e, 0x20, 0xea, 0x33, 0x3d, 0x3e, 0xc3, 0x2e, 0x6d, 0xea, 0x8e, 0x6c, 0xbf, 0xc2, 0x3c,
	0x0f, 0x90, 0xbf, 0x69, 0xc6, 0x6d, 0x77, 0x39, 0x4e, 0xf7, 0xfa, 0x52, 0xef, 0xaf, 0x94, 0xe2,
	0x87, 0x9b, 0x53, 0x19, 0x8f, 0xf5, 0xf4, 0x17, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x35, 0x71, 0xc5,
	0x55, 0x01, 0x00, 0x00,
}
