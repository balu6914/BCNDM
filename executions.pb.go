// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executions.proto

package datapace

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Algorithm struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	ModelToken           string   `protobuf:"bytes,4,opt,name=modelToken,proto3" json:"modelToken,omitempty"`
	ModelName            string   `protobuf:"bytes,5,opt,name=modelName,proto3" json:"modelName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Algorithm) Reset()         { *m = Algorithm{} }
func (m *Algorithm) String() string { return proto.CompactTextString(m) }
func (*Algorithm) ProtoMessage()    {}
func (*Algorithm) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef99ea0b3f4241db, []int{0}
}

func (m *Algorithm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Algorithm.Unmarshal(m, b)
}
func (m *Algorithm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Algorithm.Marshal(b, m, deterministic)
}
func (m *Algorithm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Algorithm.Merge(m, src)
}
func (m *Algorithm) XXX_Size() int {
	return xxx_messageInfo_Algorithm.Size(m)
}
func (m *Algorithm) XXX_DiscardUnknown() {
	xxx_messageInfo_Algorithm.DiscardUnknown(m)
}

var xxx_messageInfo_Algorithm proto.InternalMessageInfo

func (m *Algorithm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Algorithm) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Algorithm) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Algorithm) GetModelToken() string {
	if m != nil {
		return m.ModelToken
	}
	return ""
}

func (m *Algorithm) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

type Dataset struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef99ea0b3f4241db, []int{1}
}

func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (m *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(m, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Dataset) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*Algorithm)(nil), "datapace.Algorithm")
	proto.RegisterType((*Dataset)(nil), "datapace.Dataset")
}

func init() { proto.RegisterFile("executions.proto", fileDescriptor_ef99ea0b3f4241db) }

var fileDescriptor_ef99ea0b3f4241db = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xbd, 0x4e, 0xc3, 0x40,
	0x0c, 0x80, 0x49, 0x28, 0x3f, 0xb1, 0xc4, 0x4f, 0x0f, 0x09, 0x45, 0x05, 0x21, 0x94, 0x89, 0x85,
	0xab, 0x04, 0x2b, 0x03, 0x08, 0xba, 0x32, 0x00, 0x2f, 0xe0, 0x26, 0x26, 0x3d, 0x91, 0xc4, 0x51,
	0xea, 0x22, 0x18, 0x79, 0x06, 0x5e, 0x18, 0xc5, 0x21, 0x39, 0x06, 0xba, 0xf9, 0x3e, 0x9f, 0xff,
	0x3e, 0x38, 0xa4, 0x0f, 0x4a, 0x57, 0xe2, 0xb8, 0x5a, 0xda, 0xba, 0x61, 0x61, 0xb3, 0x9b, 0xa1,
	0x60, 0x8d, 0x29, 0x4d, 0x4e, 0x72, 0xe6, 0xbc, 0xa0, 0xa9, 0xf2, 0xf9, 0xea, 0x75, 0x4a, 0x65,
	0x2d, 0x9f, 0xdd, 0xb7, 0xe4, 0x2b, 0x80, 0xe8, 0xae, 0xc8, 0xb9, 0x71, 0xb2, 0x28, 0xcd, 0x3e,
	0x84, 0x2e, 0x8b, 0x83, 0xf3, 0xe0, 0x22, 0x7a, 0x0a, 0x5d, 0x66, 0x0c, 0x8c, 0x2a, 0x2c, 0x29,
	0x0e, 0x95, 0x68, 0xdc, 0xb2, 0x1a, 0x65, 0x11, 0x6f, 0x76, 0xac, 0x8d, 0xcd, 0x19, 0x40, 0xc9,
	0x19, 0x15, 0x2f, 0xfc, 0x46, 0x55, 0x3c, 0xd2, 0xcc, 0x1f, 0x62, 0x4e, 0x21, 0xd2, 0xd7, 0x63,
	0xdb, 0x6c, 0x4b, 0xd3, 0x1e, 0x24, 0x97, 0xb0, 0xf3, 0x80, 0x82, 0x4b, 0x92, 0xff, 0x16, 0xd0,
	0x61, 0xa1, 0x1f, 0x76, 0xf5, 0x1d, 0xc0, 0x78, 0x36, 0x9c, 0xfb, 0x4c, 0xcd, 0xbb, 0x4b, 0xc9,
	0xdc, 0xc2, 0xc1, 0x7d, 0x43, 0x28, 0xe4, 0xaf, 0x39, 0xb2, 0xbd, 0x03, 0x3b, 0xc0, 0xc9, 0xb1,
	0xed, 0x74, 0xd8, 0x5e, 0x87, 0x9d, 0xb5, 0x3a, 0x92, 0x0d, 0x73, 0x03, 0x7b, 0x5d, 0x87, 0x7e,
	0x99, 0xb1, 0xaf, 0xff, 0x45, 0xeb, 0xab, 0xe7, 0xdb, 0x4a, 0xae, 0x7f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xdc, 0x6a, 0x20, 0xec, 0x8a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExecutionsServiceClient is the client API for ExecutionsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutionsServiceClient interface {
	CreateAlgorithm(ctx context.Context, in *Algorithm, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateDataset(ctx context.Context, in *Dataset, opts ...grpc.CallOption) (*empty.Empty, error)
}

type executionsServiceClient struct {
	cc *grpc.ClientConn
}

func NewExecutionsServiceClient(cc *grpc.ClientConn) ExecutionsServiceClient {
	return &executionsServiceClient{cc}
}

func (c *executionsServiceClient) CreateAlgorithm(ctx context.Context, in *Algorithm, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/datapace.ExecutionsService/CreateAlgorithm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executionsServiceClient) CreateDataset(ctx context.Context, in *Dataset, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/datapace.ExecutionsService/CreateDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecutionsServiceServer is the server API for ExecutionsService service.
type ExecutionsServiceServer interface {
	CreateAlgorithm(context.Context, *Algorithm) (*empty.Empty, error)
	CreateDataset(context.Context, *Dataset) (*empty.Empty, error)
}

func RegisterExecutionsServiceServer(s *grpc.Server, srv ExecutionsServiceServer) {
	s.RegisterService(&_ExecutionsService_serviceDesc, srv)
}

func _ExecutionsService_CreateAlgorithm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Algorithm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionsServiceServer).CreateAlgorithm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datapace.ExecutionsService/CreateAlgorithm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionsServiceServer).CreateAlgorithm(ctx, req.(*Algorithm))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExecutionsService_CreateDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dataset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionsServiceServer).CreateDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datapace.ExecutionsService/CreateDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionsServiceServer).CreateDataset(ctx, req.(*Dataset))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExecutionsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datapace.ExecutionsService",
	HandlerType: (*ExecutionsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAlgorithm",
			Handler:    _ExecutionsService_CreateAlgorithm_Handler,
		},
		{
			MethodName: "CreateDataset",
			Handler:    _ExecutionsService_CreateDataset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "executions.proto",
}
