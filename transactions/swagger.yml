swagger: "2.0"
info:
  title: Datapace Transactions Service
  description: HTTP API for managing transactions and balance.
  version: "1.0.0"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /tokens:
    get:
      summary: Retrieves users balance
      tags:
        - balance
      parameters:
        - $ref: "#/parameters/Authorization"
      responses:
        200:
          description: Users balance retrieved.
          schema:
            $ref: "#/definitions/Balance"
        403:
          description: Missing or invalid access token provided.
        404:
          description: User does not exist.
        500:
          $ref: "#/responses/ServiceError"
  /tokens/:id:
    get:
      summary: Retrives any user balance while using admin account.
      tags:
        - tokens
      parameters:
        - $ref: "#/parameters/Authorization"
      responses:
        200:
          description: Users balance retrieved.
          schema:
            $ref: "#/definitions/Balance"
        403:
          description: Missing or invalid access token provided.
        404:
          description: User does not exist.
        500:
          $ref: "#/responses/ServiceError"
  /tokens/buy:
    post:
      summary: Purchases tokens for user
      tags:
        - tokens
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: BuyWithdrawInfo
          description: |
            JSON-formatted request specifying the user ID and the token amount.
          in: body
          schema:
            $ref: "#/definitions/BuyWithdrawInfo"
      responses:
        200:
          description: User purchased tokens successfully.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
  /tokens/withdraw:
    post:
      summary: Sell tokens for real money.
      tags:
        - tokens
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: BuyWithdrawInfo
          description: |
            JSON-formatted request specifying the user ID and the token amount.
          in: body
          schema:
            $ref: "#/definitions/BuyWithdrawInfo"
      responses:
        200:
          description: User withdrawed tokens successfully.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
  /contracts:
    get:
      summary: List finds and returns page of contracts by contract owner or partner, depending on role.
      tags:
        - revenue sharing
      parameters:
        - $ref: "#/parameters/Authorization"
        - in: query
          name: page
          type: number
          minimum: 0
          default: 0
          required: false
          description: Start page from which items will be included in the result set.
        - in: query
          name: limit
          type: number
          maximum: 100
          default: 20
          required: false
          description: Number of items that will be taken starting from page parameter. The final result set is in range [page * limit, page * limit + limit).
        - in: query
          name: owner
          type: boolean
          default: false
          required: false
          description: List smart contracts where requester is owner
        - in: query
          name: partner
          type: boolean
          default: false
          required: false
          description: List smart contracts where requester is partner
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: '#/definitions/Page'
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    post:
      summary: Creates contract and stores it into datastore.
      tags:
        - revenue sharing
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Contract"
      responses:
        200:
          description: Contract created.
        500:
          $ref: "#/responses/ServiceError"
  /contracts/sign:
    patch:
      summary: Signs contract.
      tags:
        - revenue sharing
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Sign"
      responses:
        200:
          description: Contract signed.
        500:
          $ref: "#/responses/ServiceError"
  /tokens/tokens-history:
    get:
      summary: Retrives list of deposit & withdrawals for a particular user.
      tags:
        - tokens
      parameters:
        - $ref: "#/parameters/Authorization"
      responses:
        200:
          description: Users balance retrieved.
          schema:
            $ref: "#/definitions/History"
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"          
parameters:
  Authorization:
    name: Authorization
    description: User access token.
    in: header
    type: string
    required: true
  Sign:
    name: sign
    description: signing smart contract
    in: body
    schema:
      $ref: "#/definitions/SignReq"
    required: true
  Contract:
    name: contract
    description: creating smart contract
    in: body
    schema:
      $ref: "#/definitions/ContractReq"

responses:
  ServiceError:
    description: Unexpected server-side error occured.

definitions:
  BuyWithdrawInfo:
    type: object
    properties:
      amount:
        type: integer
        description: The required amount of tokens.
      fund_id:
        type: string
        description: User ID.
    required:
      - amount
  Balance:
    type: object
    properties:
      balance:
        type: integer
        description: Current balance.
    required:
      - balance

  ContractRes:
    type: object
    properties:
      stream_id:
        type: string
        example: 6386057b527c920001812766
      stream_name:
        type: string
        example: Stream name
      start_time:
        type: string
        format: date-time
        example: 2022-11-29T14:04:38.872Z
      end_time:
        type: string
        format: date-time
        example: 2023-02-28T00:00:00Z
      owner_id:
        type: string
        example: 6383c9d2f6f406000109475f
      partner_id:
        type: string
        example: 6386066ef6f406000109479f
      description:
        type: string
        example: This is revenue sharing contract
      share:
        type: number
        format: double
        example: 10
      signed:
        type: boolean
        example: true
        description: Contract is signed.

  Page:
    type: object
    description: Represent paged response.
    properties:
      page:
        type: number
        minimum: 0
        default: 0
        description: Number of page returned by service.
      limit:
        type: number
        default: 20
        description: Preferred size of the page content. Size of returned set might be less than limit, but must not be more then limit.
      total:
        type: number
        minimum: 0
        description: Total number of elements satisfying query.
      content:
        type: array
        items:
          $ref: '#/definitions/ContractRes'

  SignReq:
    type: object
    description: Request for signing a smart contract
    properties:
      stream_id:
        type: string
        format: ObjectId
        description: Stream ID for which contract is signing
        example: 6386057b527c920001812766
      end_time:
        type: string
        format: date-time
        example: 2023-02-28T00:00:00Z

  ContractItem:
    type: object
    description: partner ID and share offered to him
    properties:
      partner_id:
        type: string
        format: ObjectId
        description: user ID of partner
        example: 6386066ef6f406000109479f
      share:
        type: number
        format: integer
        description: percentage of revenue sharing
        example: 15
        minimum: 0
        maximum: 100

  ContractReq:
    type: object
    description: Payload for creating contract
    properties:
      stream_id:
        type: string
      end_time:
        type: string
        format: date-time
      descirption:
        type: string
        description: Description of contract
      content:
        type: array
        items:
          $ref: '#/definitions/ContractItem'
  History:
    type: "object"
    properties:
      tokeInfo:
        type: "object"
        $ref: "#/definitions/History_TokenInfo"
      txList:
        type: "array"
        items:
          $ref: "#/definitions/HistoryList"
  HistoryList:
    type: "object"
    properties:
      from:
        type: "string"
      to:
        type: "string"
      value:
        type: "number"
      dateTime: 
        type: "string"
      txType:
        type: "string"
        enum:
          - "FEE"
          - "TRANSFER"    
  History_TokenInfo:
    type: "object"
    properties:
      name:
        type: "string"
        description: "token name"
      symbol:
        type: "string"
        description: "token symbol"
      decimals:
        type: "number"
        description: "token base decimals"
      contractOwner:
        type: "string"
        description: "contract owner or treasury account"
