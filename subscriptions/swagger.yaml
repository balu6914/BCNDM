swagger: "2.0"
info:
  title: Go Subscriptions service
  description: HTTP API for subscriptions management.
  version: "1.0.0"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /subscriptions:
    post:
      summary: Create a subscription
      description: |
        Subscription creation is performed with values provided in a request payload.
      tags:
        - subscriptions
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Subscriptions"
      responses:
        200:
          description: Subscription created.
          schema:
            type: object
            properties:
              id:
                type: string
                description: The Subscription ID.
        400:
          description: Failed due to malformed JSON.
        402:
          description: Subscription allready taken.
        500:
          $ref: "#/responses/ServiceError"
  /subscriptions/{id}:
    get:
      summary: Retrieves a Subscription by the given ID
      tags:
        - subscriptions
      parameters:
      - $ref: '#/parameters/SubscriptionId'
      - $ref: '#/parameters/Authorization'
      responses:
        200:
          description: Subscription retrieved by ID.
          schema:
            $ref: '#/definitions/Subscription'
        403:
          description: Missing or invalid access token provided.
        404:
          description: User doesn't have any subscription.
        500:
          $ref: "#/responses/ServiceError"

  /subscriptions/owned:
    get:
      summary: Retrieves a list of subscriptions for the streams which owner is logged in user
      tags:
        - subscriptions
      parameters:
        - $ref: "#/parameters/Authorization"
      responses:
        200:
          description: Subscriptions list retrieved.
          schema:
            $ref: '#/definitions/Page'
        403:
          description: Missing or invalid access token provided.
        404:
          description: User doesn't have any subscription.
        500:
          $ref: "#/responses/ServiceError"
  /subscriptions/bought:
    get:
      summary: Retrieves a list of subscriptions of the logged in user
      tags:
        - subscriptions
      parameters:
        - $ref: "#/parameters/Authorization"
      responses:
        200:
          description: Subscriptions list retrieved.
          schema:
            $ref: '#/definitions/Page'
        403:
          description: Missing or invalid access token provided.
        404:
          description: User doesn't have any subscription.
        500:
          $ref: "#/responses/ServiceError"

parameters:
  Authorization:
    name: Authorization
    description: User access token.
    in: header
    type: string
    required: true
  Subscriptions:
    name: subscriptions
    description: JSON-formatted array describing the new subscriptions.
    in: body
    schema:
      $ref: "#/definitions/SubscriptionsReq"
    required: true
  SubscriptionId:
    name: id
    description: Unique Subscription identifier.
    in: path
    type: string
    minimum: 1
    required: true

definitions:
  SubscriptionsReq:
    type: array
    items:
      $ref: '#/definitions/SubscriptionReq'
  SubscriptionReq:
    type: object
    properties:
      stream_id:
        type: string
        description: Stream ID.
      hours:
        type: integer
        description: Subscription duration.
    required:
      - stream_id
      - hours
  Subscription:
    type: object
    description: Represents a Subscription.
    properties:
      id:
        type: string
        description: Unique subscription identifier generated by the service.
      user_id:
        type: string
        description: Unique identifier of the user which subscribed to the stream.
      stream_id:
        type: string
        description: Unique identifier of the stream subscription is related to.
      stream_owner:
        type: string
        description: Unique identifier of the owner of the stream subscription is related to.
      hours:
        type: integer
        description: Number of hours subscription is valid.
        minimum: 1
      start_date:
        type: string
        format: date-time
        description: Date from which subscription is active.
      end_date:
        type: string
        format: date-time
        description: Date to which subscription is active.
      stream_url:
        type: string
        description: URL of the stream generated by the proxy server.
  Page:
    type: object
    description: Represent paged response.
    properties:
      page:
        type: number
        minimum: 0
        default: 0
        description: Number of page returned by service.
      limit:
        type: number
        default: 20
        maximum: 100
        description: Preferred size of the page content. Size of returned set might be less than limit, but must not be more then limit.
      total:
        type: number
        minimum: 0
        description: Total number of elements satisfying query.
      content:
        type: array
        items:
          $ref: '#/definitions/Subscription'

responses:
  ServiceError:
    description: Unexpected server-side error occured.
