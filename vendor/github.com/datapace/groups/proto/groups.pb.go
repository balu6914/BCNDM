// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/groups.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserGroupsRequest struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserGroupsRequest) Reset()         { *m = GetUserGroupsRequest{} }
func (m *GetUserGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserGroupsRequest) ProtoMessage()    {}
func (*GetUserGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf722f9777b404ed, []int{0}
}

func (m *GetUserGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserGroupsRequest.Unmarshal(m, b)
}
func (m *GetUserGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserGroupsRequest.Marshal(b, m, deterministic)
}
func (m *GetUserGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserGroupsRequest.Merge(m, src)
}
func (m *GetUserGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserGroupsRequest.Size(m)
}
func (m *GetUserGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserGroupsRequest proto.InternalMessageInfo

func (m *GetUserGroupsRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetUserGroupsResponse struct {
	Gids                 []string `protobuf:"bytes,1,rep,name=gids,proto3" json:"gids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserGroupsResponse) Reset()         { *m = GetUserGroupsResponse{} }
func (m *GetUserGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserGroupsResponse) ProtoMessage()    {}
func (*GetUserGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf722f9777b404ed, []int{1}
}

func (m *GetUserGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserGroupsResponse.Unmarshal(m, b)
}
func (m *GetUserGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserGroupsResponse.Marshal(b, m, deterministic)
}
func (m *GetUserGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserGroupsResponse.Merge(m, src)
}
func (m *GetUserGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserGroupsResponse.Size(m)
}
func (m *GetUserGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserGroupsResponse proto.InternalMessageInfo

func (m *GetUserGroupsResponse) GetGids() []string {
	if m != nil {
		return m.Gids
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserGroupsRequest)(nil), "groups.GetUserGroupsRequest")
	proto.RegisterType((*GetUserGroupsResponse)(nil), "groups.GetUserGroupsResponse")
}

func init() {
	proto.RegisterFile("proto/groups.proto", fileDescriptor_cf722f9777b404ed)
}

var fileDescriptor_cf722f9777b404ed = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x2f, 0xca, 0x2f, 0x2d, 0x28, 0xd6, 0x03, 0x73, 0x84, 0xd8, 0x20, 0x3c, 0x25,
	0x0d, 0x2e, 0x11, 0xf7, 0xd4, 0x92, 0xd0, 0xe2, 0xd4, 0x22, 0x77, 0xb0, 0x40, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x90, 0x00, 0x17, 0x73, 0x69, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0x67, 0x10, 0x88, 0xa9, 0xa4, 0xcd, 0x25, 0x8a, 0xa6, 0xb2, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55,
	0x48, 0x88, 0x8b, 0x25, 0x3d, 0x33, 0xa5, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0x33, 0x08, 0xcc,
	0x36, 0x8a, 0xe7, 0xe2, 0x85, 0xa8, 0x0a, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xf2, 0xe3,
	0xe2, 0x45, 0xd1, 0x2d, 0x24, 0xa3, 0x07, 0x75, 0x0f, 0x36, 0xeb, 0xa5, 0x64, 0x71, 0xc8, 0x42,
	0xac, 0x54, 0x62, 0x70, 0x52, 0x8a, 0x52, 0x48, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce,
	0xcf, 0xd5, 0x4f, 0x49, 0x2c, 0x49, 0x2c, 0x48, 0x4c, 0x4e, 0x85, 0xfa, 0x51, 0x1f, 0xec, 0xc7,
	0x24, 0x36, 0x30, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x5f, 0xe8, 0xd9, 0x00, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GroupsServiceClient is the client API for GroupsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupsServiceClient interface {
	GetUserGroups(ctx context.Context, in *GetUserGroupsRequest, opts ...grpc.CallOption) (*GetUserGroupsResponse, error)
}

type groupsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGroupsServiceClient(cc grpc.ClientConnInterface) GroupsServiceClient {
	return &groupsServiceClient{cc}
}

func (c *groupsServiceClient) GetUserGroups(ctx context.Context, in *GetUserGroupsRequest, opts ...grpc.CallOption) (*GetUserGroupsResponse, error) {
	out := new(GetUserGroupsResponse)
	err := c.cc.Invoke(ctx, "/groups.GroupsService/GetUserGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupsServiceServer is the server API for GroupsService service.
type GroupsServiceServer interface {
	GetUserGroups(context.Context, *GetUserGroupsRequest) (*GetUserGroupsResponse, error)
}

// UnimplementedGroupsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGroupsServiceServer struct {
}

func (*UnimplementedGroupsServiceServer) GetUserGroups(ctx context.Context, req *GetUserGroupsRequest) (*GetUserGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserGroups not implemented")
}

func RegisterGroupsServiceServer(s *grpc.Server, srv GroupsServiceServer) {
	s.RegisterService(&_GroupsService_serviceDesc, srv)
}

func _GroupsService_GetUserGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupsServiceServer).GetUserGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/groups.GroupsService/GetUserGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupsServiceServer).GetUserGroups(ctx, req.(*GetUserGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "groups.GroupsService",
	HandlerType: (*GroupsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserGroups",
			Handler:    _GroupsService_GetUserGroups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/groups.proto",
}
