// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/sharing.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Receivers struct {
	// Types that are valid to be assigned to VersionOption:
	//	*Receivers_VersionEmpty
	//	*Receivers_Version
	VersionOption        isReceivers_VersionOption `protobuf_oneof:"versionOption"`
	GroupIds             []string                  `protobuf:"bytes,3,rep,name=groupIds,proto3" json:"groupIds,omitempty"`
	UserIds              []string                  `protobuf:"bytes,4,rep,name=userIds,proto3" json:"userIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Receivers) Reset()         { *m = Receivers{} }
func (m *Receivers) String() string { return proto.CompactTextString(m) }
func (*Receivers) ProtoMessage()    {}
func (*Receivers) Descriptor() ([]byte, []int) {
	return fileDescriptor_91370404ec19d425, []int{0}
}

func (m *Receivers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receivers.Unmarshal(m, b)
}
func (m *Receivers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receivers.Marshal(b, m, deterministic)
}
func (m *Receivers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receivers.Merge(m, src)
}
func (m *Receivers) XXX_Size() int {
	return xxx_messageInfo_Receivers.Size(m)
}
func (m *Receivers) XXX_DiscardUnknown() {
	xxx_messageInfo_Receivers.DiscardUnknown(m)
}

var xxx_messageInfo_Receivers proto.InternalMessageInfo

type isReceivers_VersionOption interface {
	isReceivers_VersionOption()
}

type Receivers_VersionEmpty struct {
	VersionEmpty bool `protobuf:"varint,1,opt,name=versionEmpty,proto3,oneof"`
}

type Receivers_Version struct {
	Version uint64 `protobuf:"varint,2,opt,name=version,proto3,oneof"`
}

func (*Receivers_VersionEmpty) isReceivers_VersionOption() {}

func (*Receivers_Version) isReceivers_VersionOption() {}

func (m *Receivers) GetVersionOption() isReceivers_VersionOption {
	if m != nil {
		return m.VersionOption
	}
	return nil
}

func (m *Receivers) GetVersionEmpty() bool {
	if x, ok := m.GetVersionOption().(*Receivers_VersionEmpty); ok {
		return x.VersionEmpty
	}
	return false
}

func (m *Receivers) GetVersion() uint64 {
	if x, ok := m.GetVersionOption().(*Receivers_Version); ok {
		return x.Version
	}
	return 0
}

func (m *Receivers) GetGroupIds() []string {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *Receivers) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Receivers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Receivers_VersionEmpty)(nil),
		(*Receivers_Version)(nil),
	}
}

type Sharing struct {
	SourceUserId         string     `protobuf:"bytes,1,opt,name=sourceUserId,proto3" json:"sourceUserId,omitempty"`
	StreamId             string     `protobuf:"bytes,2,opt,name=streamId,proto3" json:"streamId,omitempty"`
	Receivers            *Receivers `protobuf:"bytes,3,opt,name=receivers,proto3" json:"receivers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Sharing) Reset()         { *m = Sharing{} }
func (m *Sharing) String() string { return proto.CompactTextString(m) }
func (*Sharing) ProtoMessage()    {}
func (*Sharing) Descriptor() ([]byte, []int) {
	return fileDescriptor_91370404ec19d425, []int{1}
}

func (m *Sharing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sharing.Unmarshal(m, b)
}
func (m *Sharing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sharing.Marshal(b, m, deterministic)
}
func (m *Sharing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sharing.Merge(m, src)
}
func (m *Sharing) XXX_Size() int {
	return xxx_messageInfo_Sharing.Size(m)
}
func (m *Sharing) XXX_DiscardUnknown() {
	xxx_messageInfo_Sharing.DiscardUnknown(m)
}

var xxx_messageInfo_Sharing proto.InternalMessageInfo

func (m *Sharing) GetSourceUserId() string {
	if m != nil {
		return m.SourceUserId
	}
	return ""
}

func (m *Sharing) GetStreamId() string {
	if m != nil {
		return m.StreamId
	}
	return ""
}

func (m *Sharing) GetReceivers() *Receivers {
	if m != nil {
		return m.Receivers
	}
	return nil
}

type GetSharingsResponse struct {
	Sharings             []*Sharing `protobuf:"bytes,1,rep,name=sharings,proto3" json:"sharings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetSharingsResponse) Reset()         { *m = GetSharingsResponse{} }
func (m *GetSharingsResponse) String() string { return proto.CompactTextString(m) }
func (*GetSharingsResponse) ProtoMessage()    {}
func (*GetSharingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_91370404ec19d425, []int{2}
}

func (m *GetSharingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSharingsResponse.Unmarshal(m, b)
}
func (m *GetSharingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSharingsResponse.Marshal(b, m, deterministic)
}
func (m *GetSharingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSharingsResponse.Merge(m, src)
}
func (m *GetSharingsResponse) XXX_Size() int {
	return xxx_messageInfo_GetSharingsResponse.Size(m)
}
func (m *GetSharingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSharingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSharingsResponse proto.InternalMessageInfo

func (m *GetSharingsResponse) GetSharings() []*Sharing {
	if m != nil {
		return m.Sharings
	}
	return nil
}

type GetSharingsToGroupsRequest struct {
	ReceiverGroupIds     []string `protobuf:"bytes,1,rep,name=receiverGroupIds,proto3" json:"receiverGroupIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSharingsToGroupsRequest) Reset()         { *m = GetSharingsToGroupsRequest{} }
func (m *GetSharingsToGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSharingsToGroupsRequest) ProtoMessage()    {}
func (*GetSharingsToGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91370404ec19d425, []int{3}
}

func (m *GetSharingsToGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSharingsToGroupsRequest.Unmarshal(m, b)
}
func (m *GetSharingsToGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSharingsToGroupsRequest.Marshal(b, m, deterministic)
}
func (m *GetSharingsToGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSharingsToGroupsRequest.Merge(m, src)
}
func (m *GetSharingsToGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSharingsToGroupsRequest.Size(m)
}
func (m *GetSharingsToGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSharingsToGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSharingsToGroupsRequest proto.InternalMessageInfo

func (m *GetSharingsToGroupsRequest) GetReceiverGroupIds() []string {
	if m != nil {
		return m.ReceiverGroupIds
	}
	return nil
}

type GetSharingsRequest struct {
	ReceiverGroupIds     []string `protobuf:"bytes,1,rep,name=receiverGroupIds,proto3" json:"receiverGroupIds,omitempty"`
	ReceiverUserId       string   `protobuf:"bytes,2,opt,name=receiverUserId,proto3" json:"receiverUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSharingsRequest) Reset()         { *m = GetSharingsRequest{} }
func (m *GetSharingsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSharingsRequest) ProtoMessage()    {}
func (*GetSharingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_91370404ec19d425, []int{4}
}

func (m *GetSharingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSharingsRequest.Unmarshal(m, b)
}
func (m *GetSharingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSharingsRequest.Marshal(b, m, deterministic)
}
func (m *GetSharingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSharingsRequest.Merge(m, src)
}
func (m *GetSharingsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSharingsRequest.Size(m)
}
func (m *GetSharingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSharingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSharingsRequest proto.InternalMessageInfo

func (m *GetSharingsRequest) GetReceiverGroupIds() []string {
	if m != nil {
		return m.ReceiverGroupIds
	}
	return nil
}

func (m *GetSharingsRequest) GetReceiverUserId() string {
	if m != nil {
		return m.ReceiverUserId
	}
	return ""
}

func init() {
	proto.RegisterType((*Receivers)(nil), "sharing.Receivers")
	proto.RegisterType((*Sharing)(nil), "sharing.Sharing")
	proto.RegisterType((*GetSharingsResponse)(nil), "sharing.GetSharingsResponse")
	proto.RegisterType((*GetSharingsToGroupsRequest)(nil), "sharing.GetSharingsToGroupsRequest")
	proto.RegisterType((*GetSharingsRequest)(nil), "sharing.GetSharingsRequest")
}

func init() {
	proto.RegisterFile("proto/sharing.proto", fileDescriptor_91370404ec19d425)
}

var fileDescriptor_91370404ec19d425 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x5d, 0xb3, 0x15, 0xbb, 0x99, 0x2d, 0x6d, 0x35, 0x95, 0x50, 0x94, 0x72, 0x08, 0x2e, 0x42,
	0x11, 0x42, 0x59, 0xb4, 0x9c, 0xb9, 0x14, 0xa1, 0xdd, 0x72, 0x41, 0x72, 0xe9, 0xa5, 0xb7, 0x34,
	0x19, 0xb2, 0x91, 0xd8, 0x38, 0xd8, 0x4e, 0x25, 0xc4, 0x6f, 0xf0, 0xaf, 0x5c, 0x51, 0x1c, 0x3b,
	0x6d, 0x68, 0x91, 0xe0, 0x64, 0xbd, 0xe7, 0x97, 0x37, 0x33, 0x2f, 0x63, 0x38, 0x6e, 0x94, 0x34,
	0x72, 0xa9, 0xb7, 0x99, 0xaa, 0xea, 0x32, 0xb5, 0x08, 0x67, 0x0e, 0x46, 0x27, 0xa5, 0x94, 0xe5,
	0x57, 0x5a, 0x5a, 0xfa, 0xba, 0xfd, 0xb2, 0xa4, 0x5d, 0x63, 0xbe, 0xf7, 0x2a, 0xfe, 0x93, 0x41,
	0x20, 0x28, 0xa7, 0xea, 0x86, 0x94, 0xc6, 0x17, 0xb0, 0xdf, 0x9d, 0x95, 0xac, 0x3f, 0x74, 0x9a,
	0x90, 0xc5, 0x2c, 0x99, 0x6f, 0x26, 0x62, 0xc4, 0x62, 0x04, 0x33, 0x87, 0xc3, 0x47, 0x31, 0x4b,
	0xf6, 0x36, 0x13, 0xe1, 0x09, 0x8c, 0x60, 0x5e, 0x2a, 0xd9, 0x36, 0xe7, 0x85, 0x0e, 0xa7, 0xf1,
	0x34, 0x09, 0xc4, 0x80, 0x31, 0x84, 0x59, 0xab, 0x49, 0x75, 0x57, 0x7b, 0xf6, 0xca, 0xc3, 0xb3,
	0x43, 0x78, 0xe2, 0x0c, 0x3e, 0x35, 0xa6, 0x92, 0x35, 0xff, 0x01, 0xb3, 0x8b, 0xbe, 0x7d, 0xe4,
	0xb0, 0xaf, 0x65, 0xab, 0x72, 0xba, 0xb4, 0x62, 0xdb, 0x53, 0x20, 0x46, 0x5c, 0x57, 0x55, 0x1b,
	0x45, 0xd9, 0xee, 0xbc, 0xb0, 0x2d, 0x05, 0x62, 0xc0, 0xf8, 0x06, 0x02, 0xe5, 0x07, 0x0c, 0xa7,
	0x31, 0x4b, 0x16, 0x2b, 0x4c, 0x7d, 0x54, 0xc3, 0xe8, 0xe2, 0x56, 0xc4, 0xdf, 0xc3, 0xf1, 0x9a,
	0x8c, 0xab, 0xaf, 0x05, 0xe9, 0x46, 0xd6, 0x9a, 0xf0, 0x35, 0xcc, 0xdd, 0x67, 0x3a, 0x64, 0xf1,
	0x34, 0x59, 0xac, 0x8e, 0x06, 0x1f, 0x27, 0x16, 0x83, 0x82, 0x6f, 0x20, 0xba, 0x63, 0xf2, 0x59,
	0xae, 0xbb, 0x14, 0xb4, 0xa0, 0x6f, 0x2d, 0x69, 0x83, 0xaf, 0xe0, 0xc8, 0xd7, 0x5b, 0xfb, 0xb8,
	0x98, 0xcd, 0xe4, 0x1e, 0xcf, 0xb7, 0x80, 0xa3, 0x76, 0xfe, 0xdb, 0x01, 0x5f, 0xc2, 0x81, 0xe7,
	0x5c, 0x88, 0x7d, 0x48, 0x7f, 0xb0, 0xab, 0x5f, 0x0c, 0x0e, 0x5c, 0x9d, 0x0b, 0x52, 0x37, 0x55,
	0x4e, 0xf8, 0x0e, 0x0e, 0x2f, 0x9b, 0x22, 0x33, 0x74, 0xbb, 0x24, 0xf7, 0xa6, 0x8e, 0x9e, 0xa6,
	0xfd, 0x8a, 0xa5, 0x7e, 0xc5, 0x52, 0xbb, 0x28, 0x7c, 0x82, 0x57, 0xa3, 0x28, 0x7d, 0x0a, 0x78,
	0x3a, 0x58, 0xfc, 0x3d, 0xa3, 0xe8, 0xd9, 0x43, 0x22, 0xff, 0x37, 0xf8, 0x04, 0x3f, 0xc2, 0xe2,
	0xce, 0x05, 0x9e, 0x3c, 0x2c, 0xff, 0x27, 0xaf, 0xb3, 0xd3, 0xab, 0xe7, 0x65, 0x65, 0xb6, 0xed,
	0x75, 0x9a, 0xcb, 0xdd, 0xb2, 0xc8, 0x4c, 0xd6, 0x64, 0x39, 0xf9, 0x17, 0xe5, 0x9e, 0xce, 0x63,
	0x7b, 0xbc, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x7f, 0x5b, 0x5a, 0x6f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SharingServiceClient is the client API for SharingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SharingServiceClient interface {
	UpdateReceivers(ctx context.Context, in *Sharing, opts ...grpc.CallOption) (*empty.Empty, error)
	GetSharingsToGroups(ctx context.Context, in *GetSharingsToGroupsRequest, opts ...grpc.CallOption) (*GetSharingsResponse, error)
	GetSharings(ctx context.Context, in *GetSharingsRequest, opts ...grpc.CallOption) (*GetSharingsResponse, error)
}

type sharingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSharingServiceClient(cc grpc.ClientConnInterface) SharingServiceClient {
	return &sharingServiceClient{cc}
}

func (c *sharingServiceClient) UpdateReceivers(ctx context.Context, in *Sharing, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/sharing.SharingService/UpdateReceivers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sharingServiceClient) GetSharingsToGroups(ctx context.Context, in *GetSharingsToGroupsRequest, opts ...grpc.CallOption) (*GetSharingsResponse, error) {
	out := new(GetSharingsResponse)
	err := c.cc.Invoke(ctx, "/sharing.SharingService/GetSharingsToGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sharingServiceClient) GetSharings(ctx context.Context, in *GetSharingsRequest, opts ...grpc.CallOption) (*GetSharingsResponse, error) {
	out := new(GetSharingsResponse)
	err := c.cc.Invoke(ctx, "/sharing.SharingService/GetSharings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SharingServiceServer is the server API for SharingService service.
type SharingServiceServer interface {
	UpdateReceivers(context.Context, *Sharing) (*empty.Empty, error)
	GetSharingsToGroups(context.Context, *GetSharingsToGroupsRequest) (*GetSharingsResponse, error)
	GetSharings(context.Context, *GetSharingsRequest) (*GetSharingsResponse, error)
}

// UnimplementedSharingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSharingServiceServer struct {
}

func (*UnimplementedSharingServiceServer) UpdateReceivers(ctx context.Context, req *Sharing) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReceivers not implemented")
}
func (*UnimplementedSharingServiceServer) GetSharingsToGroups(ctx context.Context, req *GetSharingsToGroupsRequest) (*GetSharingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharingsToGroups not implemented")
}
func (*UnimplementedSharingServiceServer) GetSharings(ctx context.Context, req *GetSharingsRequest) (*GetSharingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSharings not implemented")
}

func RegisterSharingServiceServer(s *grpc.Server, srv SharingServiceServer) {
	s.RegisterService(&_SharingService_serviceDesc, srv)
}

func _SharingService_UpdateReceivers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Sharing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SharingServiceServer).UpdateReceivers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharing.SharingService/UpdateReceivers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SharingServiceServer).UpdateReceivers(ctx, req.(*Sharing))
	}
	return interceptor(ctx, in, info, handler)
}

func _SharingService_GetSharingsToGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSharingsToGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SharingServiceServer).GetSharingsToGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharing.SharingService/GetSharingsToGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SharingServiceServer).GetSharingsToGroups(ctx, req.(*GetSharingsToGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SharingService_GetSharings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSharingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SharingServiceServer).GetSharings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sharing.SharingService/GetSharings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SharingServiceServer).GetSharings(ctx, req.(*GetSharingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SharingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sharing.SharingService",
	HandlerType: (*SharingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateReceivers",
			Handler:    _SharingService_UpdateReceivers_Handler,
		},
		{
			MethodName: "GetSharingsToGroups",
			Handler:    _SharingService_GetSharingsToGroups_Handler,
		},
		{
			MethodName: "GetSharings",
			Handler:    _SharingService_GetSharings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sharing.proto",
}
